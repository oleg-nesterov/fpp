#!/usr/bin/env python3
import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt
import numpy as np
import math

fig, axs = plt.subplots(2, 1, sharex=True, figsize=(15,10))
fig.tight_layout(pad=1)

def __bf_fill(mag, ang, min):
	nz = np.argmax(mag > min)
	if nz > 0:
		ang[0:nz] = ang[nz]
	elif mag[0] <= min:
		ang[:] = 0; return
	for n in np.flatnonzero(mag[nz+1:] <= min):
		ang[nz+n + 1] = ang[nz+n]

def bf_fill(mag, ang, min):
	mag = np.atleast_2d(mag.T)
	ang = np.atleast_2d(ang.T)
	for m, a in zip(mag, ang):
		__bf_fill(m,a, min)

def plot_ir(FILE:str, NORM:int, DT:int, NO:int, SR:int):
	DT = {4:np.single, 8:np.double, 16:np.longdouble}[DT]
	if NO > 1: DT = np.dtype((DT, NO))
	IR = np.fromfile(FILE, dtype = DT)

	fft = np.fft.rfft(IR.T).T
	if NORM:
		fft	/= (IR.shape[0] / 2)
		fft[0]	/= 2

	NB = fft.shape[0]
	assert(NB - 1 == IR.shape[0] // 2)

	mag = np.abs(fft)
	np.maximum(mag, 1e-16, out=mag)
	np.log10(mag, out=mag); mag *= 20

	ang = np.angle(fft)
	if NORM:	ang[mag < -120] = 0
	else:		bf_fill(mag,ang, -120)
	ang = np.unwrap(ang, axis=0) / np.pi

	for ax in axs: ax.clear()
	xtk = np.arange(NB) * (SR // 2 / (NB - 1))
	axs[0].plot(xtk, mag)
	axs[1].plot(xtk, ang)

	axs[0].set_ylim(-60, 20)
	lo, hi = ang.min(), ang.max()
	if hi - lo >= 1/2:
		LO, HI = math.floor(2*lo)/2, math.ceil(2*hi)/2
		pad = (HI - LO) / 50
		if HI - hi < pad: HI += pad
		if lo - LO < pad: LO -= pad
		axs[1].set_ylim(LO, HI)

	lgd = range(0, NO)
	for ax in axs:
		ax.margins(1/100, 1/50)
		ax.legend(lgd, loc='upper right')
		ax.grid(True)

#------------------------------------------------------------------------------
import array, termios, fcntl, os

rdy = array.array('I', [0])
def check_input():
	fcntl.ioctl(0, termios.FIONREAD, rdy)
	if rdy[0]:
		line = os.read(0, 1024).decode('ascii')
		file, norm, dt,no,sr, ack = line.split()
		plot_ir(file, int(norm), int(dt), int(no), int(sr))
		fig.canvas.draw_idle()
		with open(ack, 'bw', buffering=0) as f:
			f.write(b"ACK\n")

	fig.canvas.get_tk_widget().after(100, check_input)

check_input()
plt.show()
