#!/usr/bin/perl -w
use strict;
# ctags-like program for faust code.
# Far too simple and stupid but works "in practice".
# No options, every arg is a filename, output file is "tags",
# and --excmd is "number".

my $prec = '(?:(?:single|double|quad|fixedpoint)precision\s*)';
my $bpar = '(?:\((?:(?>[^\(\)]+)|(?-1))*\))';

my @TAGS;

my ($old, $new) = ''; while (<>) {
	my $l = $.;

	if ($new && /^\s*=/) {
		$l--;
	} else {
		($new) = /^$prec? (\w+) ($bpar)? (\s*=)?/xo and $3
			or next;
	}

	push @TAGS, [$old = $new, $ARGV, $l]
		if $old ne $new;
	undef $new; # not strictly necessary
} continue {
	$old = '', close ARGV	# reset $old and $.
		if eof;
}

open STDOUT, '>', 'tags' or die;

print <<'EOH';
!_TAG_FILE_FORMAT	2
!_TAG_FILE_SORTED	1
EOH

print "$_->[0]\t$_->[1]\t$_->[2];\"\tf\n"
	for sort {
		$a->[0] cmp $b->[0] ||
		$a->[1] cmp $b->[1] ||
		$a->[2] <=> $b->[2]
	} @TAGS;
