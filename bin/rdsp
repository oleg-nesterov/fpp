#!/usr/bin/perl -w
use strict;

sub which
{
	my ($name, $chop) = @_;

	open my $fd, '-|', 'which', $name;
	$name = <$fd> // exit 1; chop $name;
	$name = readlink $name if -l $name;

	(my $home = $name) =~ s|(?:/[^/]+){$chop}$||
		or die;

	$name, $home;
}

my ($FPP_BIN, $FPP_DIR) = which 'fpp', 2;
my @F_DEPS = map "$_/*", grep -d $_, map "$FPP_DIR/$_", qw(lib arch);
my @C_DEPS = map "$_/*", grep -d $_, map "$FPP_DIR/$_", qw(include);

my ($FAUST_BIN, $FAUST_DIR) = which 'faust', 3; # /build/bin/faust
my ($FAUST_LIB, $FAUST_ARC) = map "$FAUST_DIR/$_",
	qw(libraries architecture);
-d $_ or die "ERR!! '$_' doesn't exist.\n" for $FAUST_LIB, $FAUST_ARC;

my $DSP = shift // '';
$DSP =~ s/\.dsp$// or die "ERR!! '$DSP' is not .dsp\n";

my $FPP_CMD = "fpp -single -it -ct 0 -I $FAUST_LIB -A $FAUST_ARC";
my $CPP_CMD = '$(CXX) -Wall -Ofast -lpthread -lreadline -std=c++14 -lsndfile';

my $MAKEF = <<EOM;
.INTERMEDIATE: $DSP-cli.cpp

$DSP-cli: $DSP-cli.cpp @C_DEPS
	$CPP_CMD \$< -o \$@

$DSP-cli.cpp: $DSP.dsp $FPP_BIN @F_DEPS
	$FPP_CMD -scn '' -nvi -a cli.cpp \$< -o \$@
EOM

open my $fd, '|-', 'make', qw(-s -f -) or die;
print $fd $MAKEF; close $fd or exit;

exec "$DSP-cli", @ARGV;
