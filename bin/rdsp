#!/usr/bin/perl -w
use strict;

my ($TGT, $FLT, $DSP) = ('cli', '-single');

while (defined($_ = shift)) {
	if (/^-(cli|gtk)$/)		{ $TGT = $1; }
	elsif (/^-(double|quad)$/)	{ $FLT = $_; }
	elsif (s/\.dsp$//)		{ $DSP = $_; last; }
	else {
		die "ERR!! unsupported option '$_'.\n";
	}
}

$DSP // die "ERR!! no .dsp files specified.\n";

sub which
{
	my ($name, $chop) = @_;

	open my $fd, '-|', 'which', $name;
	$name = <$fd> // exit 1; chop $name;
	$name = readlink $name if -l $name;

	(my $home = $name) =~ s|(?:/[^/]+){$chop}$||
		or die;

	$name, $home;
}

my ($FPP_BIN, $FPP_DIR) = which 'fpp', 2;
my @F_DEPS = map "$_/*", grep -d $_, map "$FPP_DIR/$_", qw(lib arch);
my @C_DEPS = map "$_/*", grep -d $_, map "$FPP_DIR/$_", qw(include);

my ($FAUST_BIN, $FAUST_DIR) = which 'faust', 3; # /build/bin/faust
my ($FAUST_LIB, $FAUST_ARC) = map "$FAUST_DIR/$_", qw(libraries architecture);
-d $_ or die "ERR!! '$_' doesn't exist.\n" for $FAUST_LIB, $FAUST_ARC;

my $FPP_CMD = "fpp $FLT -it -ct 0 -I $FAUST_LIB -A $FAUST_ARC";
my $CPP_CMD = "\$(CXX) -std=c++14 -Wall -Ofast -I $FAUST_DIR/architecture" .
	      " -lsndfile";

my ($BIN, $CLI_FLT) = ("$DSP-$TGT", '');

if    ($FLT eq '-single' or $TGT ne 'cli') {}
elsif ($FLT eq '-double') { $BIN .= 'd'; $CLI_FLT = '-D FAUSTFLOAT=double'; }
elsif ($FLT eq '-quad')	  { $BIN .= 'q'; $CLI_FLT = '-D FAUSTFLOAT=quad';   }

my $MAKEF = $TGT eq 'cli' ? <<CLI : <<GTK;
.INTERMEDIATE: $BIN.cpp

$BIN: $BIN.cpp @C_DEPS
	$CPP_CMD $CLI_FLT -lpthread -lreadline \$< -o \$@

$BIN.cpp: $DSP.dsp $FPP_BIN @F_DEPS
	$FPP_CMD -scn '' -nvi -a cli.cpp \$< -o \$@
CLI
.INTERMEDIATE: $BIN.cpp

$BIN: $BIN.cpp @C_DEPS
	$CPP_CMD -w `pkg-config --cflags --libs portaudiocpp gtk+-2.0` \$< -o \$@

$BIN.cpp: $DSP.dsp $FPP_BIN @F_DEPS
	$FPP_CMD -a pa-gtk.cpp \$< -o \$@
GTK

open my $fd, '|-', 'make', qw(-s -f -) or die;
print $fd $MAKEF; close $fd or exit;

exec $BIN, @ARGV;
